#usda 1.0
(
    customLayerData = {
        dictionary cameraSettings = {
            dictionary Front = {
                double3 position = (5, 0, 0)
                double radius = 5
            }
            dictionary Perspective = {
                double3 position = (-899.2575362826707, -699.2121569483348, 571.4080716980216)
                double3 target = (587.1993473676918, 475.9204460415207, -381.14824466673974)
            }
            dictionary Right = {
                double3 position = (0, -5, 0)
                double radius = 5
            }
            dictionary Top = {
                double3 position = (0, 0, 5)
                double radius = 5
            }
            string boundCamera = "/OmniverseKit_Persp"
        }
        dictionary omni_layer = {
            string authoring_layer = "./generated_city.usda"
            dictionary locked = {
            }
            dictionary muteness = {
            }
        }
        dictionary renderSettings = {
            float3 "rtx:debugView:pixelDebug:textColor" = (0, 1e18, 0)
            float3 "rtx:fog:fogColor" = (0.75, 0.75, 0.75)
            float3 "rtx:index:backgroundColor" = (0, 0, 0)
            float3 "rtx:index:regionOfInterestMax" = (0, 0, 0)
            float3 "rtx:index:regionOfInterestMin" = (0, 0, 0)
            float3 "rtx:post:backgroundZeroAlpha:backgroundDefaultColor" = (0, 0, 0)
            float3 "rtx:post:colorcorr:contrast" = (1, 1, 1)
            float3 "rtx:post:colorcorr:gain" = (1, 1, 1)
            float3 "rtx:post:colorcorr:gamma" = (1, 1, 1)
            float3 "rtx:post:colorcorr:offset" = (0, 0, 0)
            float3 "rtx:post:colorcorr:saturation" = (1, 1, 1)
            float3 "rtx:post:colorgrad:blackpoint" = (0, 0, 0)
            float3 "rtx:post:colorgrad:contrast" = (1, 1, 1)
            float3 "rtx:post:colorgrad:gain" = (1, 1, 1)
            float3 "rtx:post:colorgrad:gamma" = (1, 1, 1)
            float3 "rtx:post:colorgrad:lift" = (0, 0, 0)
            float3 "rtx:post:colorgrad:multiply" = (1, 1, 1)
            float3 "rtx:post:colorgrad:offset" = (0, 0, 0)
            float3 "rtx:post:colorgrad:whitepoint" = (1, 1, 1)
            float3 "rtx:post:lensDistortion:lensFocalLengthArray" = (10, 30, 50)
            float3 "rtx:post:lensFlares:anisoFlareFalloffX" = (450, 475, 500)
            float3 "rtx:post:lensFlares:anisoFlareFalloffY" = (10, 10, 10)
            float3 "rtx:post:lensFlares:cutoffPoint" = (2, 2, 2)
            float3 "rtx:post:lensFlares:haloFlareFalloff" = (10, 10, 10)
            float3 "rtx:post:lensFlares:haloFlareRadius" = (75, 75, 75)
            float3 "rtx:post:lensFlares:isotropicFlareFalloff" = (50, 50, 50)
            float3 "rtx:post:lensFlares:spectralBlurWavelengthRange" = (380, 550, 770)
            float3 "rtx:post:tonemap:whitepoint" = (1, 1, 1)
            float3 "rtx:raytracing:indexdirect:svoBrickSize" = (32, 32, 32)
            float3 "rtx:raytracing:inscattering:singleScatteringAlbedo" = (0.9, 0.9, 0.9)
            float3 "rtx:raytracing:inscattering:transmittanceColor" = (0.5, 0.5, 0.5)
            float3 "rtx:sceneDb:ambientLightColor" = (0.1, 0.1, 0.1)
            double "rtx:translucency:worldEps" = 0.005
            float2 "rtx:viewTile:resolution" = (0, 0)
        }
    }
    defaultPrim = "City"
    endTimeCode = 6000
    metersPerUnit = 1
    startTimeCode = 0
    timeCodesPerSecond = 50
    upAxis = "Z"
)

over "Render" (
    hide_in_stage_window = true
)
{
}

over "OmniverseKit_Persp"
{
    float fthetaWidth = 1936
    float horizontalApertureOffset
    float verticalAperture
    float verticalApertureOffset
    float3 xformOp:rotateXYZ
}

def Xform "City"
{
    def Xform "GroundPlane"
    {
        token visibility = "inherited"
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Plane "CollisionPlane" (
            prepend apiSchemas = ["PhysicsCollisionAPI"]
        )
        {
            uniform token axis = "Z"
            uniform token purpose = "guide"
            token visibility = "inherited"
        }

        def Mesh "Plane" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, 0), (0.5, 0.5, 0)]
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [0, 1, 3, 2]
            rel material:binding = </City/Looks/OmniPBRBase> (
                bindMaterialAs = "weakerThanDescendants"
            )
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.5, -0.5, 0), (0.5, -0.5, 0), (-0.5, 0.5, 0), (0.5, 0.5, 0)]
            texCoord2f[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (500, 500, 1)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }
    }

    def Scope "Looks"
    {
        def Material "OmniPBRBase"
        {
            token outputs:mdl:displacement.connect = </City/Looks/OmniPBRBase/Shader.outputs:out>
            token outputs:mdl:surface.connect = </City/Looks/OmniPBRBase/Shader.outputs:out>
            token outputs:mdl:volume.connect = </City/Looks/OmniPBRBase/Shader.outputs:out>

            def Shader "Shader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @OmniPBRBase.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "OmniPBRBase"
                color3f inputs:diffuse_tint = (1, 0.7, 0) (
                    customData = {
                        float3 default = (1, 1, 1)
                    }
                    displayGroup = "Albedo"
                    displayName = "Albedo Tint"
                    doc = "When enabled, this color value is multiplied over the final albedo color"
                    hidden = false
                    renderType = "color"
                )
                token outputs:out (
                    renderType = "material"
                )
            }
        }
    }

    def Xform "Environment"
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsScene "PhysicsScene" (
            prepend apiSchemas = ["PhysxSceneAPI"]
        )
        {
            bool physxScene:enableCCD = 1
            uint physxScene:timeStepsPerSecond = 50
        }

        def DistantLight "defaultLight" (
            prepend apiSchemas = ["ShapingAPI"]
        )
        {
            float inputs:angle = 1
            float inputs:intensity = 3000
            float inputs:shaping:cone:angle = 180
            float inputs:shaping:cone:softness
            float inputs:shaping:focus
            color3f inputs:shaping:focusTint
            asset inputs:shaping:ies:file
            token visibility = "inherited"
            quatd xformOp:orient = (0.4598475543432714, -0.21946870093897358, 0.3208357699281765, -0.7983972224446085)
            double3 xformOp:scale = (1, 1, 1)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def DomeLight "DomeLight" (
            prepend apiSchemas = ["ShapingAPI"]
        )
        {
            float inputs:intensity = 1000
            float inputs:shaping:cone:angle = 180
            float inputs:shaping:cone:softness
            float inputs:shaping:focus
            color3f inputs:shaping:focusTint
            asset inputs:shaping:ies:file
            token inputs:texture:format = "latlong"
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (1, 1, 1)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }
    }

    def Scope "Buildings" (
        kind = "assembly"
    )
    {
        def Cube "building__200__176" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (18, 47, 10)
            double3 xformOp:translate = (-200, -176, 5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__200__126" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (27, 21, 48)
            double3 xformOp:translate = (-200, -126, 24)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__200__85" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (23, 33, 29)
            double3 xformOp:translate = (-200, -85, 14.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__200__48" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (28, 14, 20)
            double3 xformOp:translate = (-200, -48, 10)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__200__23" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (12, 15, 48)
            double3 xformOp:translate = (-200, -23, 24)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__200_20" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (49, 33, 42)
            double3 xformOp:translate = (-200, 20, 21)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__200_73" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (31, 44, 34)
            double3 xformOp:translate = (-200, 73, 17)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__200__122" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (37, 30, 30)
            double3 xformOp:translate = (-200, 122, 15)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__200__157" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (12, 10, 44)
            double3 xformOp:translate = (-200, 157, 22)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__200__188" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (30, 32, 28)
            double3 xformOp:translate = (-200, 188, 14)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__134__190" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (46, 19, 48)
            double3 xformOp:translate = (-134, -190, 24)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__134__145" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (30, 41, 11)
            double3 xformOp:translate = (-134, -145, 5.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__134__98" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (42, 23, 49)
            double3 xformOp:translate = (-134, -98, 24.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__134__60" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (18, 13, 48)
            double3 xformOp:translate = (-134, -60, 24)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__134__20" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (40, 41, 37)
            double3 xformOp:translate = (-134, -20, 18.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__134__28" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (24, 23, 30)
            double3 xformOp:translate = (-134, 28, 15)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__134__71" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (25, 24, 38)
            double3 xformOp:translate = (-134, 71, 19)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__134__118" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (45, 34, 19)
            double3 xformOp:translate = (-134, 118, 9.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__134__168" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (13, 31, 31)
            double3 xformOp:translate = (-134, 168, 15.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__73__195" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (34, 10, 38)
            double3 xformOp:translate = (-73, -195, 19)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__73__156" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (49, 35, 41)
            double3 xformOp:translate = (-73, -156, 20.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__73__100" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (31, 49, 43)
            double3 xformOp:translate = (-73, -100, 21.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__73__52" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (42, 16, 46)
            double3 xformOp:translate = (-73, -52, 23)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__73__9" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (35, 41, 19)
            double3 xformOp:translate = (-73, -9, 9.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__73__41" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (29, 30, 26)
            double3 xformOp:translate = (-73, 41, 13)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__73__95" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (20, 40, 17)
            double3 xformOp:translate = (-73, 95, 8.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__73__158" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (48, 47, 23)
            double3 xformOp:translate = (-73, 158, 11.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__73__216" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (44, 45, 27)
            double3 xformOp:translate = (-73, 216, 13.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__M8__M186" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (35, 27, 32)
            double3 xformOp:translate = (-8, -186, 16)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__M8__M130" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (49, 45, 29)
            double3 xformOp:translate = (-8, -130, 14.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__M8__M84" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (35, 14, 30)
            double3 xformOp:translate = (-8, -84, 15)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__M8__M44" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (39, 42, 43)
            double3 xformOp:translate = (-8, -44, 21.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__M8__15" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (30, 39, 43)
            double3 xformOp:translate = (-8, 15, 21.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__M8__77" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (12, 50, 41)
            double3 xformOp:translate = (-8, 77, 20.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__M8__131" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (34, 25, 29)
            double3 xformOp:translate = (-8, 131, 14.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__M8__187" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (13, 47, 17)
            double3 xformOp:translate = (-8, 187, 8.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__60__M186" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (29, 27, 19)
            double3 xformOp:translate = (60, -186, 9.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__60__M137" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (46, 42, 16)
            double3 xformOp:translate = (60, -137, 8)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__60__M75" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (40, 50, 12)
            double3 xformOp:translate = (60, -75, 6)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__60__M15" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (41, 30, 26)
            double3 xformOp:translate = (60, -15, 13)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__60__22" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (38, 23, 36)
            double3 xformOp:translate = (60, 22, 18)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__60__76" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (29, 48, 37)
            double3 xformOp:translate = (60, 76, 18.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__60__133" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (44, 34, 32)
            double3 xformOp:translate = (60, 133, 16)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__60__172" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (10, 25, 24)
            double3 xformOp:translate = (60, 172, 12)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__126__M189" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (38, 21, 39)
            double3 xformOp:translate = (126, -189, 19.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__126__M135" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (46, 50, 29)
            double3 xformOp:translate = (126, -135, 14.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__126__M75" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (20, 44, 16)
            double3 xformOp:translate = (126, -75, 8)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__126__M28" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (25, 27, 36)
            double3 xformOp:translate = (126, -28, 18)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__126__19" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (37, 38, 25)
            double3 xformOp:translate = (126, 19, 12.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__126__57" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (11, 17, 19)
            double3 xformOp:translate = (126, 57, 9.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__126__100" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (48, 29, 41)
            double3 xformOp:translate = (126, 100, 20.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__126__159" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (31, 49, 20)
            double3 xformOp:translate = (126, 159, 10)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__186__M175" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (14, 49, 44)
            double3 xformOp:translate = (186, -175, 22)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__186__M125" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (33, 11, 11)
            double3 xformOp:translate = (186, -125, 5.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__186__M81" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (30, 46, 50)
            double3 xformOp:translate = (186, -81, 25)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__186__M30" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (17, 34, 47)
            double3 xformOp:translate = (186, -30, 23.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__186__8" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (35, 11, 50)
            double3 xformOp:translate = (186, 8, 25)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__186__46" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (16, 31, 50)
            double3 xformOp:translate = (186, 46, 25)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__186__93" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (36, 38, 14)
            double3 xformOp:translate = (186, 93, 7)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__186__147" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (18, 49, 33)
            double3 xformOp:translate = (186, 147, 16.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "building__186__195" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            bool physics:collisionEnabled = 1
            double size = 1
            token visibility = "inherited"
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (29, 17, 39)
            double3 xformOp:translate = (186, 195, 19.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }
    }
}

